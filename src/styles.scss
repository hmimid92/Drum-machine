$black: #000 !default;
$box-shadow-sm: 0rem 0.1rem 0.3rem rgba($black, 0.8) !default;

$grid-breakpoints: (
  xss: 0,
  xs: 350px,
  sm: 576px,
  md: 668px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default;

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

@function breakpoint-next(
  $name,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @if not $n {
    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
  }
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $next: breakpoint-next($name, $breakpoints);
  $max: breakpoint-max($next, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($next, $breakpoints) {
      @content;
    }
  }
}

*,
::after,
::before {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  background-color: rgb(185, 202, 202);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  align-content: center;
  overflow: auto;
}

#drum-machine {
  min-width: 300px;
  height: 400px;
}

#display {
  width: 150px;
  height: 50px;
  background-color: beige;
  text-align: center;
  padding: 13px 0;
  font-size: 14px;
}

.drum-pad {
  padding: 6px;
  margin: 4px;
  border-radius: 4px;
  border: none;
  height: 55px;
  width: 55px;
  font-weight: bold;
  box-shadow: $box-shadow-sm;
  &:hover {
    background-color: rgb(190, 201, 171);
    color: rgb(39, 17, 17);
  }
  &:active {
    background-color: rgb(59, 88, 8);
    color: black;
    transform: translate(2px, 3px);
  }
  &:disabled {
    background-color: rgb(226, 9, 53);
    color: black;
    cursor: pointer;
  }
}

.form-check-input,
.form-range {
  cursor: pointer;
}

#freecodecamp {
  margin: 0 4px;
  font-weight: bolder;
  font-family: Georgia, "Times New Roman", Times, serif;
  font-size: large;
}

#customRange2 {
  background-color: rgb(157, 184, 121);
}

.form-label {
  left: 175px;
}

@include media-breakpoint-only(xss) {
  .main-content {
    flex-direction: column;
  }
  #root {
    margin-top: 20px;
  }
  #drum-machine {
    width: 200px;
    height: 400px;
  }
  .control-elements,
  .pad-elements {
    width: 100%;
  }
}

@include media-breakpoint-only(xs) {
  .main-content {
    flex-direction: column;
  }

  #drum-machine {
    width: 200px;
    height: 400px;
  }
  .control-elements,
  .pad-elements {
    width: 100%;
  }
  #root {
    margin-top: 20px;
  }
}

@include media-breakpoint-only(sm) {
  .main-content {
    flex-direction: column;
  }
  #drum-machine {
    width: 200px;
    height: 400px;
  }
  .control-elements,
  .pad-elements {
    width: 100%;
  }
  #root {
    margin-top: 20px;
  }
}
@include media-breakpoint-only(md) {
  .main-content {
    flex-direction: row;
  }
  #drum-machine {
    width: 600px;
    height: 280px;
  }
  #root {
    margin-top: 110px;
  }

  .control-elements,
  .pad-elements {
    width: 50%;
  }

  .control1 {
    margin-bottom: 14px;
  }
  .drum-pad {
    height: 65px;
    width: 65px;
  }
}
@include media-breakpoint-only(lg) {
  .main-content {
    flex-direction: row;
  }
  #drum-machine {
    width: 700px;
    height: 280px;
  }
  #root {
    margin-top: 110px;

  }
  .control-elements,
  .pad-elements {
    width: 50%;
  }

  .control1 {
    margin-bottom: 14px;
  }
  .drum-pad {
    height: 65px;
    width: 65px;
  }
}
@include media-breakpoint-only(xl) {
  .main-content {
    flex-direction: row;
  }
  #drum-machine {
    width: 700px;
    height: 280px;
  }
  #root {
    margin-top: 110px;

  }
  .control-elements,
  .pad-elements {
    width: 50%;
  }

  .control1 {
    margin-bottom: 14px;
  }
  .drum-pad {
    height: 65px;
    width: 65px;
  }
}
@include media-breakpoint-only(xxl) {
  .main-content {
    flex-direction: row;
  }
  #drum-machine {
    width: 700px;
    height: 280px;
  }
  .control-elements,
  .pad-elements {
    width: 50%;
  }
  #root {
    margin-top: 110px;

  }
  .control1 {
    margin-bottom: 14px;
  }
  .drum-pad {
    height: 65px;
    width: 65px;
  }
}
